<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Clannad</title>
  
  <subtitle>my blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-08T01:03:42.336Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Clannad</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>summer vacation acm first day</title>
    <link href="http://yoursite.com/2018/07/07/summer-vacation-acm-first-day/"/>
    <id>http://yoursite.com/2018/07/07/summer-vacation-acm-first-day/</id>
    <published>2018-07-07T14:29:41.000Z</published>
    <updated>2018-07-08T01:03:42.336Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Choosing-Ice-Cream"><a href="#A-Choosing-Ice-Cream" class="headerlink" title="A    Choosing Ice Cream"></a>A    Choosing Ice Cream</h1><figure class="highlight plain"><figcaption><span>are standing in the supermarket in front of the freezers. You have a very tough task ahead of you: you have to choose what type of ice cream you want for after dinner that evening. After a while, you give up: they are all awesome! Instead, you take your (fair) k-sided die out of your pocket and you decide to let fate decide.</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Of course, the number of ice cream choices, n, may not be precisely k, in which case you could not just throw the die once, rolling i, and take the ith ice cream choice. You therefore have to use some algorithm that involves zero or more die throws that results in an ice cream choice with every choice being exactly equally likely. Being a good computer scientist, you know about the accept-reject method, which would let you make such a fair choice.</span><br><span class="line">At that point, you remember that you have a very important</span><br><span class="line">competition to attend that same afternoon. You absolutely cannot afford to be late for that competition. Because of this, you decideExample: For n = 4 and k = 20 one throw is enough.</span><br><span class="line">you cannot use the accept-reject method, as there may be no bound on the number of die throws needed to ensure a fair result, so you may end up standing there for a long time and miss the competition! Instead, you resolve to find an algorithm that is fair and uses as few dice choices as possible in the worst case.</span><br><span class="line">Given n and k, can you determine the minimum number i such that there is a fair algorithm that uses at most i die throws per execution?</span><br></pre></td></tr></table></figure><h1 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">On the first line one positive number: the number of test cases, at most 100. After that per test case:</span><br><span class="line">• one line with two space-separated integers n and k (1 ≤ n,k ≤ 109): the number of ice cream choices and the number of sides of your die, respectively.</span><br></pre></td></tr></table></figure><h1 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Per test case:</span><br><span class="line">• one line with a single integer: the smallest number of throws after which you are guaranteed to be able to make a fair choice. If there is no such number, print “unbounded” instead.</span><br></pre></td></tr></table></figure><p>#Sample in- and output<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">4 2</span><br><span class="line">2 4</span><br><span class="line">3 2</span><br><span class="line">Output</span><br><span class="line">2 </span><br><span class="line">1 </span><br><span class="line">unbounded</span><br></pre></td></tr></table></figure></p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">取出冰激凌和骰子面的最大公因数，相当于将冰激凌分成的份数与骰子分成的面数相同，之后冰激凌a/=gcd（a，b）最终判断a是否等于1判断是否存在答案，而a=1时要特判，答案为0</span><br></pre></td></tr></table></figure><h1 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#define ll long long</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 2e5+10;</span><br><span class="line">int gcd(int a,int b)&#123;</span><br><span class="line">        return b==0?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int t,a,b;</span><br><span class="line">    int ans;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;t);</span><br><span class="line">    while(t--)&#123;</span><br><span class="line">        scanf(&quot;%d%d&quot;,&amp;a,&amp;b);</span><br><span class="line">        ans=0;</span><br><span class="line">        if(a==1)&#123;                                cout&lt;&lt;0&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            while(a!=1)&#123;</span><br><span class="line">                int k=gcd(a,b);</span><br><span class="line">                if(k==1) break;</span><br><span class="line">                a/=k;ans++;</span><br><span class="line">            &#125;</span><br><span class="line">            if(a!=1)</span><br><span class="line">                    cout&lt;&lt;&quot;unbounded&quot;&lt;&lt;endl;</span><br><span class="line">            else&#123;</span><br><span class="line">                    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="标程"><a href="#标程" class="headerlink" title="标程"></a>标程</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">int gcd (int a, int b)</span><br><span class="line">&#123; return b ? gcd(b, a%b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;int runs, run, n, k, t;</span><br><span class="line">scanf(&quot;%d&quot;, &amp;runs);</span><br><span class="line">for (run = 0; run &lt; runs; run++)</span><br><span class="line">&#123;scanf(&quot;%d %d&quot;, &amp;n, &amp;k);</span><br><span class="line">for (t = 0; n &gt; 1 &amp;&amp; k &gt; 1; t++)</span><br><span class="line">&#123; k = gcd(n, k);</span><br><span class="line">  n /= k;</span><br><span class="line">&#125;</span><br><span class="line">if (n &gt; 1)</span><br><span class="line">printf(&quot;unbounded\n&quot;);</span><br><span class="line">else</span><br><span class="line">printf(&quot;%d\n&quot;, t);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Failing-Components"><a href="#B-Failing-Components" class="headerlink" title="B    Failing Components"></a>B    Failing Components</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">As a jury member of the Best Architectural Planning Contest, you are tasked with scoring the reliability of a system. All systems entered in the contest consist of a number of components which depend on each other. The reliability of such a system depends on the damage done by a failing component. Ideally a failing component should have no consequences, but since most components depend on each other, some other components will usually fail as well.</span><br><span class="line">Most components are somewhat resilient to short failures of the components they depend on. For example, a database could be unavailable for a minute before the caches expire and new data must be retrieved from the database. In this case, the caches can survive for a minute after a database failure, before failing themselves. If a component depends on multiple other components which fail, it will fail as soon as it can no longer survive the failure of at least one of the components it depends on. Furthermore no component depends on itself directly, however indirect self-dependency through other components is possible.</span><br><span class="line">You want to know how many components will fail when a certain component fails, and how much time passes before all components that will eventually fail, actually fail. This is difficult to calculate by hand, so you decided to write a program to help you. Given the description of the system, and the initial component that fails, the program should report how many components will fail in total, and how much time passes before all those components have actually failed.</span><br></pre></td></tr></table></figure><h1 id="Input-1"><a href="#Input-1" class="headerlink" title="Input"></a>Input</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">On the first line one positive number: the number of test cases, at most 100. After that per test case:</span><br><span class="line">•one line with three space-separated integers n, d and c (1 ≤ n ≤ 10000 and 1 ≤ d ≤ 100000 and 1 ≤ c ≤ n): the total number of components in the system, the number of dependencies between components, and the initial component that fails, respectively.</span><br><span class="line">•d lines with three space-separated integers a, b and s (1 ≤ a,b ≤ n and a 6= b and 0 ≤ s ≤ 1000), indicating that component a depends on component b, and can survive for s seconds when component b fails.</span><br><span class="line">In each test case, all dependencies (a,b) are unique.</span><br></pre></td></tr></table></figure><h1 id="Output-1"><a href="#Output-1" class="headerlink" title="Output"></a>Output</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Per test case:</span><br><span class="line">• one line with two space-separated integers: the total number of components that will fail, and the number of seconds before all components that will fail, have actually failed.</span><br></pre></td></tr></table></figure><h1 id="Sample-in-and-output"><a href="#Sample-in-and-output" class="headerlink" title="Sample in- and output"></a>Sample in- and output</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Input</span><br><span class="line">2</span><br><span class="line">3 2 2</span><br><span class="line">2 1 5</span><br><span class="line">3 2 5</span><br><span class="line">3 3 1</span><br><span class="line">2 1 2</span><br><span class="line">3 1 8</span><br><span class="line">3 2 4</span><br><span class="line">Output</span><br><span class="line">2 5</span><br><span class="line">3 6</span><br></pre></td></tr></table></figure><h1 id="题目意思和解题思路"><a href="#题目意思和解题思路" class="headerlink" title="题目意思和解题思路"></a>题目意思和解题思路</h1><p>给出初始坏的部件，求与之直接或间接相关的部件所有坏掉所需的时间，直接看成一个图，有向边代表依赖关系，所以直接对该图求最短路，然后遍历dist[]，找出最大的值就是答案，而坏掉的部件就是dist[]中不等于INF的个数</p><h1 id="我的代码-1"><a href="#我的代码-1" class="headerlink" title="我的代码"></a>我的代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define ll long long</span><br><span class="line">const int INF=0x3f3f3f3f;</span><br><span class="line">#define mem(a) memset(a,0,sizeof(a))</span><br><span class="line">const double Pi=acos(-1);</span><br><span class="line">#define log8(x) log10(x)/log10(8.0)</span><br><span class="line">priority_queue&lt;pair&lt;int ,int&gt;&gt;s;</span><br><span class="line">struct Edge</span><br><span class="line">&#123;</span><br><span class="line">        int v,next,w;</span><br><span class="line">&#125;edge[1005505];</span><br><span class="line">int edgeNum;</span><br><span class="line">int head[10010];</span><br><span class="line">void addedge(int u,int v,int w)  ///加从u-&gt;v的边</span><br><span class="line">&#123;</span><br><span class="line">        edge[edgeNum].v=v;</span><br><span class="line">        edge[edgeNum].next=head[u];</span><br><span class="line">        edge[edgeNum].w=w;</span><br><span class="line">        head[u]=edgeNum++;</span><br><span class="line">&#125;</span><br><span class="line">int dist[10010];</span><br><span class="line">int vis[10010];</span><br><span class="line">int n,d,c,u,v,w;</span><br><span class="line">void dijkstra(int c)</span><br><span class="line">&#123;</span><br><span class="line">    memset(dist,0x3f,sizeof(dist));</span><br><span class="line">    mem(vis);</span><br><span class="line">    dist[c]=0;</span><br><span class="line">    s.push(make_pair(0,c));</span><br><span class="line">    while(s.size())</span><br><span class="line">    &#123;</span><br><span class="line">        int x=s.top().second;</span><br><span class="line">        s.pop();</span><br><span class="line">        if(vis[x]) continue;</span><br><span class="line">        vis[x]=1;</span><br><span class="line">        for(int i=head[x];i!=-1;i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            int y=edge[i].v,z=edge[i].w;</span><br><span class="line">            if(dist[y]&gt;dist[x]+z)</span><br><span class="line">            &#123;</span><br><span class="line">                    dist[y]=dist[x]+z;</span><br><span class="line">                    s.push(make_pair(-dist[y],y));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int t;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;t);</span><br><span class="line">    int ans,sum;</span><br><span class="line">    while(t--)</span><br><span class="line">        &#123;</span><br><span class="line">        sum=0;</span><br><span class="line">        ans=0;</span><br><span class="line">        scanf(&quot;%d%d%d&quot;,&amp;n,&amp;d,&amp;c);</span><br><span class="line">        memset(head,-1,sizeof(head));</span><br><span class="line">        for(int i=0;i&lt;d;i++)</span><br><span class="line">        &#123;</span><br><span class="line">                scanf(&quot;%d%d%d&quot;,&amp;v,&amp;u,&amp;w);</span><br><span class="line">                addedge(u,v,w);</span><br><span class="line">        &#125;</span><br><span class="line">        dijkstra(c);</span><br><span class="line">        for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">            if(dist[i]==INF)&#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                ans=max(ans,dist[i]);</span><br><span class="line">                sum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;sum&lt;&lt;&quot; &quot;&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-Lift-Problems"><a href="#D-Lift-Problems" class="headerlink" title="D    Lift Problems"></a>D    Lift Problems</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">On the ground floor (floor zero) of a large university building a number of students are waiting for a lift. Normally, the lift stops at every floor where one or more students need to get out, but that is annoying for the students who want to get out on a higher floor. Alternatively, the lift could skip some floors, but that is annoying for the students who wanted to get out on one of those floors.</span><br><span class="line">Specifically, a student will be annoyed on every floor where the lift stops, if the lift has not yet reached the floor on which he or she wants to get out. If the lift skips the floor on which a student wants to get out, he or she will be annoyed on that floor and every higher floor, up to (and excluding) the floor where the lift makes its next stop and the student can finally get out to start walking back down the stairs to his or her destination.</span><br><span class="line">For example, if a student wants to get out on the fifth floor, while the lift stops at the second, seventh and tenth floor, the student will be annoyed on floors two, five and six. In total, this student will thus be annoyed on three floors.</span><br><span class="line">Upon entering the lift, every student presses the button corresponding to the floor he or she wants to go to, even if it was already pressed by someone else. The CPU controlling the lift thus gets to know exactly how many students want to get out on every floor.</span><br><span class="line">You are charged with programming the CPU to decide on which floors to stop. The goal is to minimize the total amount of lift anger: that is, the number of floors on which every student is annoyed, added together for all students.</span><br><span class="line">You may ignore all the people who may (want to) enter the lift at any higher floor. The lift has to operate in such a way that every student waiting at the ground floor can reach the floor she or he wants to go to by either getting out at that floor or by walking down the stairs.</span><br></pre></td></tr></table></figure><h1 id="Input-2"><a href="#Input-2" class="headerlink" title="Input"></a>Input</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">On the first line one positive number: the number of test cases, at most 100. After that per test case:</span><br><span class="line">•one line with a single integer n (1 ≤ n ≤ 1500): the number of floors of the building, excluding the ground floor.</span><br><span class="line">•one line with n space-separated integers si (0 ≤ si ≤ 1500): for each floor i, the number of students si that want to get out.</span><br></pre></td></tr></table></figure><h1 id="Output-2"><a href="#Output-2" class="headerlink" title="Output"></a>Output</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Per test case:</span><br><span class="line">• one line with a single integer: the smallest possible total amount of lift anger.</span><br><span class="line">Problem D: Lift Problems</span><br></pre></td></tr></table></figure><h1 id="Sample-in-and-output-1"><a href="#Sample-in-and-output-1" class="headerlink" title="Sample in- and output"></a>Sample in- and output</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Input</span><br><span class="line">3</span><br><span class="line">5</span><br><span class="line">0 3 0 0 7</span><br><span class="line">5</span><br><span class="line">0 0 3 0 7</span><br><span class="line">10</span><br><span class="line">3 1 4 1 5 9 2 6 5 3</span><br><span class="line">Output</span><br><span class="line">7</span><br><span class="line">6</span><br><span class="line">67</span><br></pre></td></tr></table></figure><h1 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目意思求怒气值，以第一组样例来解释，到达第二层楼的同学有三名，到达5楼的同学有7名，如果设置2楼停，那么想到达5楼的7个同学怒气值增加，每人增加1，之后在上升，而如果是只在5楼停，那么想到达二楼的同学，会在3，4，5层增加怒气值，然后在5楼通过楼梯走到2楼（同学只能往下走，不能往上走）,最终怒气值为9，这道题就是求怎么使得怒气值最小，样例一显然为7</span><br><span class="line">样例二选择只在5楼停，那么怒气值为6，最小</span><br><span class="line">该题显然是个动态规划题，通过dp[i]，意思是当在i楼时的最小怒气值</span><br></pre></td></tr></table></figure><h1 id="我的代码-2"><a href="#我的代码-2" class="headerlink" title="我的代码"></a>我的代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#define ll long long</span><br><span class="line">const int m=1e9+10;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 2e5+10;</span><br><span class="line">int a[1550];</span><br><span class="line">int su[1550];</span><br><span class="line">int dp[1550];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int t,n;</span><br><span class="line">    int ans;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;t);</span><br><span class="line">    while(t--)&#123;</span><br><span class="line">        memset(su,0,sizeof(su));</span><br><span class="line">        memset(dp,0,sizeof(dp));</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">        for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">            scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        for(int i=n;i&gt;=1;i--)&#123;</span><br><span class="line">            su[i]=su[i+1]+a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        dp[0]=0;</span><br><span class="line">        for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">            int temp=0;</span><br><span class="line">            dp[i]=m;</span><br><span class="line">            for(int j=i-1;j&gt;=0;j--)&#123;</span><br><span class="line">                dp[i]=min(dp[i],dp[j]+temp+su[i+1]);</span><br><span class="line">                temp+=(i-j)*a[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;dp[n]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="标程-1"><a href="#标程-1" class="headerlink" title="标程"></a>标程</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">// Solution to Lift Problems</span><br><span class="line">// Author: Thomas Beuman</span><br><span class="line"></span><br><span class="line">// Time complexity: O(n^2)</span><br><span class="line">// Memory: O(n)</span><br><span class="line"></span><br><span class="line">// @EXPECTED_RESULTS@: CORRECT</span><br><span class="line"></span><br><span class="line">// Solution method: Dynamic programming</span><br><span class="line"></span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int nmax = 1500;</span><br><span class="line"></span><br><span class="line">const int infty = 1&lt;&lt;30;</span><br><span class="line"></span><br><span class="line">int S[nmax+1];</span><br><span class="line">int Anger[nmax+1]; // Anger[i] = minimum total anger when lift stops at floor i</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;int runs, run, n, i, j, skipanger, students;</span><br><span class="line">scanf(&quot;%d&quot;, &amp;runs);</span><br><span class="line">for (run = 0; run &lt; runs; run++)</span><br><span class="line">&#123;</span><br><span class="line">// Read input</span><br><span class="line">scanf(&quot;%d&quot;, &amp;n);</span><br><span class="line">for (i = 1; i &lt;= n; i++)</span><br><span class="line">scanf(&quot;%d&quot;, &amp;S[i]);</span><br><span class="line"></span><br><span class="line">// Count total number of students</span><br><span class="line">students = 0;</span><br><span class="line">for (i = 1; i &lt;= n; i++)</span><br><span class="line">students += S[i];</span><br><span class="line"></span><br><span class="line">// Dynamic programming</span><br><span class="line">Anger[0] = 0;</span><br><span class="line">for (i = 1; i &lt;= n; i++)</span><br><span class="line">&#123;students -= S[i]; // Number of students that want to go higher</span><br><span class="line">skipanger = 0;</span><br><span class="line">Anger[i] = infty;</span><br><span class="line">// Try all possible previous stops</span><br><span class="line">for (j = i-1; j &gt;= 0; j--)</span><br><span class="line">&#123;Anger[i] = min(Anger[i], Anger[j] + skipanger + students);</span><br><span class="line">skipanger += (i-j)*S[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Print answer</span><br><span class="line">printf(&quot;%d\n&quot;, Anger[n]);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;A-Choosing-Ice-Cream&quot;&gt;&lt;a href=&quot;#A-Choosing-Ice-Cream&quot; class=&quot;headerlink&quot; title=&quot;A    Choosing Ice Cream&quot;&gt;&lt;/a&gt;A    Choosing Ice Cream
      
    
    </summary>
    
      <category term="acm" scheme="http://yoursite.com/categories/acm/"/>
    
    
      <category term="acm" scheme="http://yoursite.com/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>saomiaoxian xianduanshu</title>
    <link href="http://yoursite.com/2018/07/02/saomiaoxian-xianduanshu/"/>
    <id>http://yoursite.com/2018/07/02/saomiaoxian-xianduanshu/</id>
    <published>2018-07-02T08:56:19.000Z</published>
    <updated>2018-07-02T08:57:25.944Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#define ll long long</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 1e5+10;</span><br><span class="line">struct no&#123;</span><br><span class="line">        double e,s,f,h;</span><br><span class="line">&#125;line[N*2];</span><br><span class="line">int cov[N&lt;&lt;2];</span><br><span class="line">double sum[N&lt;&lt;2],c[N&lt;&lt;2];</span><br><span class="line">bool cmp(no a,no b)</span><br><span class="line">&#123;</span><br><span class="line">        return a.h==b.h?a.f&gt;b.f:a.h&lt;b.h;</span><br><span class="line">&#125;</span><br><span class="line">void PushUp(int l,int r,int rt)</span><br><span class="line">&#123;</span><br><span class="line">        if(cov[rt]) sum[rt]=c[r+1]-c[l];</span><br><span class="line">        else if(l==r) sum[rt]=0;</span><br><span class="line">        else sum[rt]=sum[rt&lt;&lt;1]+sum[rt&lt;&lt;1|1];</span><br><span class="line">&#125;</span><br><span class="line">void build(int l,int r,int rt)</span><br><span class="line">&#123;</span><br><span class="line">        int m=l+r&gt;&gt;1;</span><br><span class="line">        cov[rt]=0;</span><br><span class="line">        sum[rt]=0;</span><br><span class="line">        if(l==r) return;</span><br><span class="line">        build(l,m,rt&lt;&lt;1);</span><br><span class="line">        build(m+1,r,rt&lt;&lt;1|1);</span><br><span class="line">&#125;</span><br><span class="line">void updata(int rt,int l,int r,int L,int R,int v)&#123;</span><br><span class="line">        int mid=l+r&gt;&gt;1;</span><br><span class="line">        if(l&gt;=L&amp;&amp;r&lt;=R)&#123;</span><br><span class="line">                cov[rt]+=v;</span><br><span class="line">                PushUp(l,r,rt);</span><br><span class="line">                return;</span><br><span class="line">        &#125;</span><br><span class="line">        if(mid&gt;=L) updata(rt&lt;&lt;1,l,mid,L,R,v);</span><br><span class="line">        if(mid&lt;R) updata(rt&lt;&lt;1|1,mid+1,r,L,R,v);</span><br><span class="line">        PushUp(l,r,rt);</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">        double x1,x2,y1,y2;</span><br><span class="line">        int n;</span><br><span class="line">        int k;</span><br><span class="line">        int kase=0;</span><br><span class="line">        double ans;</span><br><span class="line">        while(scanf(&quot;%d&quot;,&amp;n)&amp;&amp;n)&#123;</span><br><span class="line">                        k=0;</span><br><span class="line">                        ans=0;</span><br><span class="line">                for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">                        scanf(&quot;%lf%lf%lf%lf&quot;,&amp;x1,&amp;y1,&amp;x2,&amp;y2);</span><br><span class="line">                        line[++k].s=x1,line[k].e=x2,line[k].h=y1,line[k].f=1;</span><br><span class="line">                        c[k]=x1;</span><br><span class="line">                        k++;</span><br><span class="line">                        line[k].s=x1,line[k].e=x2,line[k].h=y2,line[k].f=-1;</span><br><span class="line">                        c[k]=x2;</span><br><span class="line">                &#125;</span><br><span class="line">                sort(line+1,line+k+1,cmp);</span><br><span class="line">                sort(c+1,c+1+k);</span><br><span class="line">                int m=unique(c+1,c+1+k)-c-1;</span><br><span class="line">                build(1,m,1);</span><br><span class="line"></span><br><span class="line">                for(int i=1;i&lt;k;i++)&#123;</span><br><span class="line">                        int xl=lower_bound(c+1,c+1+m,line[i].s)-c;</span><br><span class="line">                        int xr=lower_bound(c+1,c+1+m,line[i].e)-c-1;</span><br><span class="line">                        updata(1,1,m,xl,xr,line[i].f);</span><br><span class="line">                        ans+=(line[i+1].h-line[i].h)*sum[1];</span><br><span class="line">                &#125;</span><br><span class="line">                printf(&quot;Test case #%d\n&quot;,++kase);</span><br><span class="line">                printf(&quot;Total explored area: %.2f\n\n&quot;,ans);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux 查看硬盘</title>
    <link href="http://yoursite.com/2018/05/30/Linux-%E6%9F%A5%E7%9C%8B%E7%A1%AC%E7%9B%98/"/>
    <id>http://yoursite.com/2018/05/30/Linux-查看硬盘/</id>
    <published>2018-05-30T15:02:15.000Z</published>
    <updated>2018-05-30T15:24:36.881Z</updated>
    
    <content type="html"><![CDATA[<p><font color="#00ffff">每日学习Linux基础命令 第八天</font></p><p><style><br>    h2 {<br>        color= black;<br>        font-size=2;<br>    }<br></style></p><h2>命名规则</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/dev/xxy</span><br><span class="line">xx表示硬盘的类型可能是</span><br><span class="line">sd 表示是SCSI、SATA或者USB接口的硬盘</span><br><span class="line">hd 表示这是一个采用IDE接口的硬盘</span><br><span class="line">y 则表明了硬盘是使用了此类接口的第几个硬盘 一般是a-z的字符</span><br><span class="line"></span><br><span class="line">分区/dev/xxyn</span><br><span class="line">n 1-4表示是主分区或者扩张分区</span><br><span class="line">逻辑分区从5开始</span><br></pre></td></tr></table></figure><h2>fdisk</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l 硬盘名/分区名</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font color=&quot;#00ffff&quot;&gt;每日学习Linux基础命令 第八天&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;style&gt;&lt;br&gt;    h2 {&lt;br&gt;        color= black;&lt;br&gt;        font-size=2;&lt;br&gt;    }&lt;br&gt;&lt;/
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux-用户和用户组(2)</title>
    <link href="http://yoursite.com/2018/05/28/Linux-%E7%94%A8%E6%88%B7%E5%92%8C%E7%94%A8%E6%88%B7%E7%BB%84-2/"/>
    <id>http://yoursite.com/2018/05/28/Linux-用户和用户组-2/</id>
    <published>2018-05-28T14:07:48.000Z</published>
    <updated>2018-05-29T05:23:42.433Z</updated>
    
    <content type="html"><![CDATA[<p>每日学习Linux基础命令 第七天</p><h1 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a><font size="4">创建用户</font></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd [用户名]</span><br><span class="line">设置密码 passwd [用户名]</span><br></pre></td></tr></table></figure><style>    ul{        font-size :20px;        color : black;        font-weight:bold;    }    </style><p><ul><br>    <li>UID 上一个新建用户UID+1</li><br>    <li>家目录 /home/用户名</li><br>    <li>用户备注 无</li><br>    <li>主用户组 新建与用户同名的用户组</li><br>    <li>从属用户组</li><br>    <li>Shell类型 bash</li><br></ul></p><blockquote><p><font color="black" size="3">useradd -c clan -u 601 -d /tmp/stu01 clannad -G stu.s_group01</font></p></blockquote><p><ul><br>    <li>-c指定用户备注</li><br>    <li>-u指定用户UID</li><br>    <li>-d指定用户家目录</li><br>    <li>-g指定主用户组</li><br>    <li>-G指定除主用户组外所从属的用户组</li><br></ul><br>可用finger和id来检验</p><h1 id="修改用户"><a href="#修改用户" class="headerlink" title="修改用户"></a><font size="4">修改用户</font></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">usermod -c -u -d -g -G 修改</span><br><span class="line">用 -l -u 选项修改用户名和UID</span><br></pre></td></tr></table></figure><h1 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a><font size="4">删除用户</font></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">userdel [用户名]</span><br><span class="line">如果要删除全部则</span><br><span class="line">userdel -rf [用户名]</span><br></pre></td></tr></table></figure><h1 id="创建用户组"><a href="#创建用户组" class="headerlink" title="创建用户组"></a><font size="4">创建用户组</font></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd [用户名]</span><br><span class="line">用usermod -G [用户组名] [用户]将用户加入到用户组中</span><br></pre></td></tr></table></figure><h1 id="修改用户组"><a href="#修改用户组" class="headerlink" title="修改用户组"></a><font size="4">修改用户组</font></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupmod -g 8888 -n [新的用户组名] [旧用户组名] 更改用户组的GID 更改用户组名</span><br></pre></td></tr></table></figure><h1 id="删除用户组"><a href="#删除用户组" class="headerlink" title="删除用户组"></a><font size="4">删除用户组</font></h1><blockquote><p><font color="black"><strong>groupdel [用户组名]</strong> <font color="red"><strong>有主用户就无法删除</strong>  </font></font></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每日学习Linux基础命令 第七天&lt;/p&gt;
&lt;h1 id=&quot;创建用户&quot;&gt;&lt;a href=&quot;#创建用户&quot; class=&quot;headerlink&quot; title=&quot;创建用户&quot;&gt;&lt;/a&gt;&lt;font size=&quot;4&quot;&gt;创建用户&lt;/font&gt;&lt;/h1&gt;&lt;figure class=&quot;hig
      
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux-用户和用户组</title>
    <link href="http://yoursite.com/2018/05/27/Linux-%E7%94%A8%E6%88%B7%E5%92%8C%E7%94%A8%E6%88%B7%E7%BB%84/"/>
    <id>http://yoursite.com/2018/05/27/Linux-用户和用户组/</id>
    <published>2018-05-27T14:33:52.000Z</published>
    <updated>2018-05-27T15:17:48.527Z</updated>
    
    <content type="html"><![CDATA[<p>每日学习Linux基础命令 第六天</p><h1 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Linux通过ID来识别用户，正常情况每个用户有独一无二的id，称作UID(USer’s ID)</span><br><span class="line">有3类用户：</span><br><span class="line">管理员用户 root 0</span><br><span class="line">虚拟用户 bin、nobody等 1-499</span><br><span class="line">一般用户 500开始</span><br><span class="line"></span><br><span class="line">用户组</span><br><span class="line">GID （group‘sID）</span><br><span class="line">每个用户可以从属多个用户组，但只有一个主用户组</span><br></pre></td></tr></table></figure><h1 id="查看系统中的用户"><a href="#查看系统中的用户" class="headerlink" title="查看系统中的用户"></a>查看系统中的用户</h1> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id [用户名]</span><br></pre></td></tr></table></figure><h1 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h1> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su (Switch User)</span><br><span class="line">su -(l)  root 切换用户环境</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每日学习Linux基础命令 第六天&lt;/p&gt;
&lt;h1 id=&quot;用户和用户组&quot;&gt;&lt;a href=&quot;#用户和用户组&quot; class=&quot;headerlink&quot; title=&quot;用户和用户组&quot;&gt;&lt;/a&gt;用户和用户组&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux vimm</title>
    <link href="http://yoursite.com/2018/05/26/Linux-vim/"/>
    <id>http://yoursite.com/2018/05/26/Linux-vim/</id>
    <published>2018-05-26T14:42:39.000Z</published>
    <updated>2018-05-26T15:44:50.106Z</updated>
    
    <content type="html"><![CDATA[<p>每日学习基础Linux命令 第五天</p><h1 id="vim"><a href="#vim" class="headerlink" title="vim"></a><font size="5" color="#03ffff">vim</font></h1><blockquote><p><font size="3">1环境设置参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set nu 表示行数显示</span><br><span class="line">set nonu 表示不显示行数</span><br><span class="line">有需要可以输入 set all 查看所有命令</span><br></pre></td></tr></table></figure></font></p></blockquote><blockquote><p><font size="3">2 移动光标</font></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">移动到58行行首，再向右移动30个字符，移动到第8行行尾，再向左移动3列，最后移动文件末行</span><br><span class="line">[移动命令键] 如 8l 向右移动8个字符，3j向下移动</span><br><span class="line">3行，gg移动到文件首行，G移动到文件末行，0移动到当</span><br><span class="line">前行首，$移动到当前行尾。</span><br><span class="line">也可以跟数字，例如3G表示移动到第三行行首</span><br></pre></td></tr></table></figure><blockquote><p><font size="3">3</font></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">移动到第一行行首，并且向下搜寻一下&quot;man&quot;这个字符串</span><br><span class="line">直接用 /man 来查找即可，用n/N来上下寻找</span><br></pre></td></tr></table></figure><blockquote><p><font size="3">4</font></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">将50到100行之间的man替换为MAN，并且一个一个挑选是否需要替换</span><br><span class="line">n1,n2s/word1/word2/gc</span><br><span class="line">n1行到n2行将word1替换为word2，c表示在替换前询问用户</span><br><span class="line">可以省略  整个替换可以用1，$s来替换</span><br></pre></td></tr></table></figure><blockquote><p><font size="3">5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">复制51到60行这10行的内容，并且贴到最后一行之后</span><br><span class="line">yy 复制当前行的文本</span><br><span class="line">nyy 复制从光标开始的向下n行</span><br><span class="line">p 在光标的下一行粘贴</span><br><span class="line">操作：用50G，之后用10yy，最后G移动到末行，p粘贴</span><br></pre></td></tr></table></figure></font></p></blockquote><blockquote><p><font size="3">6<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">删除11到30行之间的20行，去第29行首，并且删除15个字符</span><br><span class="line">dd 删除光标所在的行</span><br><span class="line">ndd 删除光标所在向下n行</span><br><span class="line">x 删除光标的字符</span><br><span class="line">nx 从光标所在开始删除n个字符</span><br></pre></td></tr></table></figure></font></p></blockquote><blockquote><p><font size="3">7<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">撤销修改的命令是 u</span><br><span class="line">或者进入命令行模式 e！表示撤销全部操作</span><br></pre></td></tr></table></figure></font></p></blockquote><blockquote><p><font size="3">8</font></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">将文件另存为</span><br><span class="line">w man.config.bak</span><br><span class="line">w是保存</span><br></pre></td></tr></table></figure><blockquote><p><font size="3">9<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在最后一行插入当前目录下某文件内容并保存</span><br><span class="line">r是读取命令</span><br><span class="line">r [文本文件]</span><br></pre></td></tr></table></figure></font></p></blockquote><blockquote><p><font size="3">10</font></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">同时打开多个文件</span><br><span class="line">vim 文件1，文件2，文件3</span><br><span class="line">用命令行用n和N切换文件</span><br></pre></td></tr></table></figure><blockquote><p><font size="3">11<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">将第9步的内容的第1列到第10列拷贝粘贴到man.config中</span><br><span class="line">首先进入可视模式，先按cttl+v进入</span><br><span class="line">然后可以根据之前的y，p命令完成操作</span><br></pre></td></tr></table></figure></font></p></blockquote><blockquote><p><font size="3">12<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">存储两个文件并退出vim</span><br></pre></td></tr></table></figure></font></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每日学习基础Linux命令 第五天&lt;/p&gt;
&lt;h1 id=&quot;vim&quot;&gt;&lt;a href=&quot;#vim&quot; class=&quot;headerlink&quot; title=&quot;vim&quot;&gt;&lt;/a&gt;&lt;font size=&quot;5&quot; color=&quot;#03ffff&quot;&gt;vim&lt;/font&gt;&lt;/h1&gt;&lt;block
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 重定向（Redirection）和管道（Pipes）</title>
    <link href="http://yoursite.com/2018/05/25/Linux-%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    <id>http://yoursite.com/2018/05/25/Linux-重定向/</id>
    <published>2018-05-25T10:34:02.000Z</published>
    <updated>2018-05-29T05:04:00.424Z</updated>
    
    <content type="html"><![CDATA[<p><font color="#00ffff">每日学习基础Linux命令 第四天</font></p><h1 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo 用来创建空文本</span><br><span class="line">-e 表示将输入转义字符</span><br><span class="line">touch 用来创建空文件</span><br></pre></td></tr></table></figure><h1 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h1><h2 id="gt-输出重定向"><a href="#gt-输出重定向" class="headerlink" title="&gt;输出重定向"></a>&gt;输出重定向</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1&gt; stdout.txt 将正常输出输出到对应文件</span><br><span class="line">2&gt; stderr.txt 将错误输出输出到对应文件</span><br><span class="line">2&gt;&gt;/dev/null 将错误输出输出到空文件</span><br><span class="line">/dev/null 视为黑洞，写入的文件将被丢弃</span><br><span class="line"></span><br><span class="line">如果存在对应文件单个&gt;将会覆盖，否则就创建新文件，如果不覆盖，那么用&gt;&gt;将新内容写到文件元内容的下方。</span><br><span class="line">&amp;&gt; std.txt可以 用来讲错误输出和正常输出输出到一个文本中</span><br></pre></td></tr></table></figure><p>##&lt; &lt;&lt;输入重定向<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tr &lt;/br&gt;</span><br><span class="line">tr [ ] [ ] &lt;[文本]&lt;/br&gt;</span><br><span class="line">例如 tr &apos; &apos; &apos;\t&apos; &lt;./fruit.txt&gt; 将当前目录中，fruit文本中的空格替换为&apos;\t&apos;&lt;/br&gt;</span><br><span class="line">sort&lt;/br&gt;</span><br><span class="line">sort -k &lt;&lt;EOF&lt;/br&gt;</span><br><span class="line">\&gt; 1 apple&lt;/br&gt;</span><br><span class="line">\&gt; 2 pear&lt;/br&gt;</span><br><span class="line">\&gt; 3 banana&lt;/br&gt;</span><br><span class="line">例如 sort -k2 &lt;&lt;EOF 表示按第二个字段排序，界定符为EOF</span><br><span class="line">也可以将排序后的内容输入到对应文本，可以在后面自己写</span><br></pre></td></tr></table></figure><h1 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h1><p><font size="2">个人理解管道就是将标准输出为传递给另一个标准输入用|将命令连接起来支持的命令有grep cut head tail less more wc tr sort等</font></p><h2 id="gt-less"><a href="#gt-less" class="headerlink" title="&gt;less"></a>&gt;less<br></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll -al |less 就是将查看文本内容用less命令查看</span><br></pre></td></tr></table></figure><h2 id="gt-grep"><a href="#gt-grep" class="headerlink" title="&gt;grep"></a>&gt;grep<br></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep是非常强大的文本搜索工具&lt;/br&gt;</span><br><span class="line">grep [关键字] [目标文件]&lt;/br&gt;例如：ll -al |grep &apos;text&apos; 查找文件名中带有text的文件</span><br></pre></td></tr></table></figure><h2 id="gt-wc-cutcut-文本切割-wc-统计文本的行数-单词数-字节数"><a href="#gt-wc-cutcut-文本切割-wc-统计文本的行数-单词数-字节数" class="headerlink" title="&gt;wc cutcut 文本切割 wc 统计文本的行数 单词数 字节数"></a>&gt;wc cut<br>cut 文本切割 wc 统计文本的行数 单词数 字节数<br></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cut</span><br><span class="line">cat ~/clan.txt |cut -c1,2 表示切割文本clan.txt， -c表示字符列 1，2表示前两行</span><br><span class="line">cat ~/clan.txt |cut -f1 -d&quot;:&quot; 间隔符为: -d </span><br><span class="line">表示间隔符 -f1,2分别表示第一个间隔符和第二个</span><br><span class="line">间隔符</span><br><span class="line"></span><br><span class="line">wc</span><br><span class="line">wc ~/clan.txt 统计文本中的行数 单词数 字节数</span><br><span class="line">-l 仅统计行数</span><br></pre></td></tr></table></figure><p><img src="wc.png" width="40%" height="40%"></p><p><font size="3" color="#000000">ls -al ~|cut -c1|grep “d”|wc -l</font></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font color=&quot;#00ffff&quot;&gt;每日学习基础Linux命令 第四天&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&quot;echo&quot;&gt;&lt;a href=&quot;#echo&quot; class=&quot;headerlink&quot; title=&quot;echo&quot;&gt;&lt;/a&gt;echo&lt;/h1&gt;&lt;figure cla
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 通配符-查看文本内容</title>
    <link href="http://yoursite.com/2018/05/24/Linux-%E9%80%9A%E9%85%8D%E7%AC%A6-%E6%9F%A5%E7%9C%8B%E6%96%87%E6%9C%AC%E5%86%85%E5%AE%B9/"/>
    <id>http://yoursite.com/2018/05/24/Linux-通配符-查看文本内容/</id>
    <published>2018-05-24T13:32:36.000Z</published>
    <updated>2018-05-25T11:17:54.474Z</updated>
    
    <content type="html"><![CDATA[<p><font color="#00ffff">每日学习基础Linux命令 第三天</font></p><h1 id="通配符"><a href="#通配符" class="headerlink" title="通配符* [] {} ?"></a>通配符* [] {} ?</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*代表任意字符串</span><br><span class="line">rm (-f) *.text 指删除带有后缀.text的所有文件</span><br><span class="line">？ 代表任意的单个字符</span><br><span class="line">[c1,c2] 代表任意c1-c2之间的单一字符、有序</span><br><span class="line">或者[c1,c2,c3,c3,c5] 代表列表中的单一字符</span><br><span class="line">&#123;string1,string2......&#125; 表示包含多种字符串的文件 </span><br><span class="line">例如 ll &#123;aaa,bbb&#125;*.text </span><br><span class="line">！表示取反，通常与&#123;&#125;、[]连用</span><br></pre></td></tr></table></figure><h1 id="cat、less、more、head、tail"><a href="#cat、less、more、head、tail" class="headerlink" title="cat、less、more、head、tail"></a>cat、less、more、head、tail</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat</span><br><span class="line">cat [文本文件]</span><br><span class="line">用于短的文本</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">推荐用less,支持大文本查看,根据Pageup,Pagedown翻页,利用/[字符串],查找文本中出现的字符串，利用</span><br><span class="line">n,N来查询上一个和下一个</span><br><span class="line">less</span><br><span class="line">less [文本文件]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">more</span><br><span class="line">more [文本文件]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">head</span><br><span class="line">head -n [文本文件] 查看头n行文文本内容,不写默认10行</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tail</span><br><span class="line"></span><br><span class="line">tail -n [文本文件] 查看尾n行文本</span><br></pre></td></tr></table></figure><hr><h2 id="ALL-Right-copy-clannad-club"><a href="#ALL-Right-copy-clannad-club" class="headerlink" title="ALL Right &copy; clannad.club"></a>ALL Right &copy; <font color="#00ffff" size="7"><a href="https://www.clannad.club" target="_blank" rel="noopener">clannad.club</a></font></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font color=&quot;#00ffff&quot;&gt;每日学习基础Linux命令 第三天&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&quot;通配符&quot;&gt;&lt;a href=&quot;#通配符&quot; class=&quot;headerlink&quot; title=&quot;通配符* [] {} ?&quot;&gt;&lt;/a&gt;通配符* [] {} ?&lt;/
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Lunix 查找文件</title>
    <link href="http://yoursite.com/2018/05/23/Lunix-%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/05/23/Lunix-查找文件/</id>
    <published>2018-05-23T14:16:30.000Z</published>
    <updated>2018-05-24T13:51:19.196Z</updated>
    
    <content type="html"><![CDATA[<p>每日学习基础Linux命令 第二天</p><h1 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查找快(因为Linux中把文件名都存在/var/lib/mlocate数据库里，所以locate是查找数据库，而不是查找硬盘</span><br><span class="line">，而数据库一般一天更新一次，所以有的文件删除还能找到，刚创建的文件不一定找得到，可以手动更新upda</span><br><span class="line">-tedb手动更新) 功能弱</span><br><span class="line"></span><br><span class="line">locate [查找的路径][文件名的关键字]  eg..locate .tar查找所有包含tar的文件</span><br></pre></td></tr></table></figure><h1 id="find"><a href="#find" class="headerlink" title="find"></a>find</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">功能强大，查找慢</span><br><span class="line">find [查找范围]（一般目录可以省略）[查找条件]（可以多个选项，文件大小类型）[动作]（进一步处理）</span><br><span class="line">find / -name passwd 查找根目录下文件名为passwd的文件 如果要用关键字，要用通配符</span><br><span class="line">find / -type l 查找文件类型</span><br><span class="line">d 目录文件</span><br><span class="line">f 普通文件</span><br><span class="line">c 字符设备文件</span><br><span class="line">b 块设备文件</span><br><span class="line">l 符号链接文件</span><br><span class="line">时间类型 </span><br><span class="line">-mtime -mmin  文件被读取/执行时间</span><br><span class="line">-ctime -cmin  文件属性修改时间</span><br><span class="line">-atime -amin  文件修改时间</span><br><span class="line">find /tmp -stime -4 -ls 显示目录下4天之内改变过的文件</span><br><span class="line">find /tmp -stime +4 -ls 显示目录下4天之前改变过的文件</span><br><span class="line">find /tmp -stime 4 -ls 显示目录下第四天改变过的文件</span><br><span class="line">-time 天数 -min 分钟</span><br><span class="line"></span><br><span class="line">-size -3k +3k 3k -ls 同时间用法 c字节 k1024字节 M1024k G1024M </span><br><span class="line">-user root -ls 用户为root的文件</span><br><span class="line">-uid 505 -ls 用户组uid为500的用户的文件</span><br><span class="line">-group stu -ls 从属于stu用户组的文件</span><br><span class="line">-gid 0 -ls 查找从属于gid为0的用户组的文件</span><br><span class="line"></span><br><span class="line">find /tmp -perm 754 -ls 权限为754的文件即 111101100文件</span><br><span class="line"></span><br><span class="line">可以联合条件 与-a 或-o 非！</span><br><span class="line">比如 find /tmp \( -size +1k -a -size -10M -a -mmin -30 -a -type f \) -ls</span><br><span class="line"></span><br><span class="line">命令用-exec</span><br><span class="line">find ~clannad/clan -mmin -60 -exec rm -r &#123;&#125; \;</span><br><span class="line">可以用-OK替换exec,每次命令会询问，更安全</span><br></pre></td></tr></table></figure><hr><h2 id="ALL-Right-copy-clannad-club"><a href="#ALL-Right-copy-clannad-club" class="headerlink" title="ALL Right &copy; clannad.club"></a>ALL Right &copy; <font color="#00ffff" size="7"><a href="https://www.clannad.club" target="_blank" rel="noopener">clannad.club</a></font></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每日学习基础Linux命令 第二天&lt;/p&gt;
&lt;h1 id=&quot;locate&quot;&gt;&lt;a href=&quot;#locate&quot; class=&quot;headerlink&quot; title=&quot;locate&quot;&gt;&lt;/a&gt;locate&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 打包压缩</title>
    <link href="http://yoursite.com/2018/05/22/Linux-%E6%89%93%E5%8C%85%E5%8E%8B%E7%BC%A9/"/>
    <id>http://yoursite.com/2018/05/22/Linux-打包压缩/</id>
    <published>2018-05-22T15:17:21.000Z</published>
    <updated>2018-05-25T04:56:09.956Z</updated>
    
    <content type="html"><![CDATA[<p><font size="4" color="#03ffff">每日学习基础Linux命令 第一天</font></p><h1 id="tar"><a href="#tar" class="headerlink" title="* tar"></a>* tar</h1><blockquote><ul><li>tar(tape archive)打包文件<ul><li>tar -</li><li>tar -cf[打包文件名][要打包的文件/列表]   (建议命名.tar)<br>比如 tar -cf c.tar ~/clannad/c1 ~/clannad/c2 ~/clannad/c3 ~/clannad/c4</li></ul></li><li>tar -tf [打包文件]  显示打包文件中的所有文件  </li><li>tar -f [打包文件] –delete [打包文件中的文件] 删除</li><li>tar -f [打包文件1] -A [打包文件2] 将打包文件2合并到文件1</li><li>tar -f [打包文件] -r 文件1 将文件1加入打包文件</li><li>tar -xf [打包文件] 解包</li><li>tar -czf [打包文件] 打包压缩一体 (建议命名.* tar.gz)</li><li>tar -xzf [打包文件] 解压解包一体</li></ul></blockquote><p><strong>-c 创建打包文件 -f指定打包文件名</strong></p><h1 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gzip </span><br><span class="line">gizp [打包文件] 压缩文件</span><br><span class="line">gizp -d [打包文件] 解压文件</span><br><span class="line">gizp -(1-9)表示文件压缩的大小，1文件最大，压缩速度快，9文件最小，压缩速度最慢，默认为6</span><br></pre></td></tr></table></figure><p>ps:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ls -Rl [打包文件] ==ll</span><br><span class="line">rm 删除空目录</span><br><span class="line">rm -rf [非空目录] -r删除目录 -f=force 强制不提示</span><br><span class="line">rm -r 也可以删除非空</span><br><span class="line">touch 生成空文件</span><br><span class="line">mrdir 生成空目录</span><br><span class="line">cp 复制目录</span><br><span class="line">mv 移动(剪切)</span><br></pre></td></tr></table></figure></p><hr><h2 id="ALL-Right-copy-clannad-club"><a href="#ALL-Right-copy-clannad-club" class="headerlink" title="ALL Right &copy; clannad.club"></a>ALL Right &copy; <font color="#00ffff" size="7"><a href="https://www.clannad.club" target="_blank" rel="noopener">clannad.club</a></font></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font size=&quot;4&quot; color=&quot;#03ffff&quot;&gt;每日学习基础Linux命令 第一天&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&quot;tar&quot;&gt;&lt;a href=&quot;#tar&quot; class=&quot;headerlink&quot; title=&quot;* tar&quot;&gt;&lt;/a&gt;* tar&lt;/h1&gt;&lt;b
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>静态主席树</title>
    <link href="http://yoursite.com/2018/05/09/%E9%9D%99%E6%80%81%E4%B8%BB%E5%B8%AD%E6%A0%91/"/>
    <id>http://yoursite.com/2018/05/09/静态主席树/</id>
    <published>2018-05-09T14:38:30.000Z</published>
    <updated>2018-05-09T14:38:30.838Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown基本语法</title>
    <link href="http://yoursite.com/2018/05/05/clannad/"/>
    <id>http://yoursite.com/2018/05/05/clannad/</id>
    <published>2018-05-05T11:11:34.000Z</published>
    <updated>2018-09-10T10:46:20.156Z</updated>
    
    <content type="html"><![CDATA[<p>尝试了N多天的尝试，终于成功的搭建好了。</p><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#一级标题</span></span><br><span class="line"><span class="comment">##二级标题</span></span><br><span class="line"><span class="comment">###三级标题</span></span><br><span class="line"><span class="comment">####四级标题</span></span><br><span class="line"><span class="comment">#####五级标题</span></span><br><span class="line"><span class="comment">######六级标题</span></span><br></pre></td></tr></table></figure><hr><blockquote><p><em>clannad</em> (斜体) <br><br><em>clannad</em> <br><br><strong>clannad</strong> <br><br><strong>clannad</strong> <br><br><strong><em>clannad</em></strong> <br><br><del>clannad</del> <br></p><p><font color="#00ffff" size="7"><a href="http://www.clannad.club" target="_blank" rel="noopener">clannad</a><br></font></p></blockquote><hr><h2 id="回到顶部"><a href="#回到顶部" class="headerlink" title="|回到顶部|"></a>|<a href="#readme">回到顶部</a>|</h2><p><img src="dog.jpg" width="80%"></p><h2 id="ALL-Right-copy-clannad-club"><a href="#ALL-Right-copy-clannad-club" class="headerlink" title="ALL Right &copy; clannad.club"></a>ALL Right &copy; <font color="#00ffff" size="6"><a href="https://www.clannad.club" target="_blank" rel="noopener">clannad.club</a></font></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;尝试了N多天的尝试，终于成功的搭建好了。&lt;/p&gt;
&lt;h1 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="搭建博客" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/05/05/hello-world/"/>
    <id>http://yoursite.com/2018/05/05/hello-world/</id>
    <published>2018-05-05T04:58:23.229Z</published>
    <updated>2018-05-05T04:58:23.229Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
